최단 경로 알고리즘은 말 그대로 가장 짧은 경로를 찾는 알고리즘이다.

1. 각 지점은 그래프에서 '노드' 로 표현
2. 지점간 연결된 도로는 그래프에서 '간선' 으로 표현

실제 코딩 테스트에서는 최단 경로를 모두 출력하는 문제보다는 단순히 최단 거리를 출력하도록 요구하는 문제가 많이 출제된다.

최단 거리 알고리즘은 
1. 다익스트라 최단 경로 알고리즘
2. 플로이드 워셜
3. 벨만 포드 알고리즘

크게 이렇게 세가지이다.       
  

  
♦︎ 다익스트라 최단 경로 알고리즘  
  description : 최단 경로 알고리즘은 그래프에서 여러 개의 노드가 있을 때, 특정한 노드에서 출발하여 다른 노드로 가는 각각의 최단 경로를 구해주는 알고리즘이다.
                다익스트라 최단 경로 알고리즘은 '음의 간선' 이 없을 때 정상적으로 동작한다.  
                '음의 간선' 이란 0보다 작은 값을 가지는 간선을 의미한다.  
1.  출발 노드를 설정한다.
2. 최단 거리 테이블을 초기화한다.
3. 방문하지 않은 노드 중에서 최단 거리가 가장 짧은 노드를 선택한다.
4. 해당 노드를 거쳐 다른 노드로 가는 비용을 계산하여 최단 거리 테이블을 갱신한다.
5. 위 과정에서 3과 4번을 반복한다.

다익스트라 알고리즘은 최단 경로를 구하는 과정에서 '각 노드에 대한 현재까지의 최단 거리' 정보를 항상 1차원 리스트에 저장하며 리스트를 계속 갱신한다는 특징이 있다.
매번 현재 처리하고 있는 노드를 기준으로 주변 간선을 확인한다.
나중에 현재 처리하고 있는 노드로 도달하는 더 짧은 경로를 찾으면 '더 짧은 경로도 있었네? 이제부터 이 경로가 제일 짧은 경로야' 라고 판단하는 것이다.
따라서 방문하지 않은 노드 중에서 현재 최단 거리가 가장 짧은 노드를 확인해 그 노드에 대하여 4번 과정을 수행한다는 점에서 그리디 알고리즘으로 볼 수 있다.